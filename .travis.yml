services: docker
language: go
go: 1.15
env:
  global:
    - FLEET_MANAGEMENT_ORG: quay.io/fleet-management
    - secure: ARRa4MvZafDwj/5ZJe8dbrVi7X7izKmcWbBT94/wYPTXR/MJL5+p8GTpJGAcjSUqpkJLDOoXdgr7AtlHPlhYYYEu+D/FPjERVE4q5ggPXPt+3P0YBgVcSmrJpS2igWM8ha9vzynqUEpwUr4qOLq+NWGu4zZ7lV8VPaCL21hIoB+RJeXo0JLXtm/r0hfCTbR9g4M0C7B2rZV7D7hRonmmAjumKGZlI1LffVTTLVtkdqFqOaDVJLRvyBFMfTFMGa8Ow18mgut18+G3eI0jiUV74pApTa9idfbe6BF7eF3ISQcqdkDW5SdHJm1bnUGLCg9gobjOf0dM5pbZJoId6mINR0oUn2qifwFpiqOTurGqfya6GFX+1O+tIS3i0cO9HtzUWX299gGAZYxsSKMwdK7bKNyPPe64iATBZzoqGLfUfkROdYtx65BdNXW/lmScxcEiOiBLAN0IiZYhLJQ3EA14G6cc4FHmK6T20NP7hojfCWo2emmNgLFiE0Zh0fpuQVtfd6xZXcVadHX5pgPmpdSMsIwXChzgeV3p/HxIvQ3t56Oj8b0imjeQoKO9zGxzNBNZ4eAAU97SI+9M0L6uRbNXlzRjl1TbxK9ud3kNXfe7x+d0xZDMa62UgAQdH9fSfIqlhsCwLQmjAe3pMi42VL74GZWGAMADYRvkqlm4TFP+JP0=
    - secure: A1NFxXhHvLmQFUyhNJvQhmzi9+eRb47xGt5ljWqQCKUJYetWsRDPWwUsRTTvOyo3RkVn/mqShp96m9rgP3JoImLEf7MwsSEbP/fkpQEnrXSfFBPpHx07VhAwrGu60UH9WI75fYJIokwHepYfTZv4neGfotb3EsfcoDMrSsHQ3R++bmLmLSkmCGZ/fYzklnqCEXoVw8mMCRN5IUFe5hJPwLed/IjHtY9B5be9HiK7rcnfYKGNAgNluQhxxOZ7+ajx6qI7wW9ZQY8TOaU4M7y0J0NZmrEvCuEECRWqZpxXhxEdJc7Xnvx/qA5wfIvAZtfCxBE5QwgshyaYsvYBjVossUCsJGLPcCQUHpHE0ecprnfePVAJxooXoBAotLgCTEQiOo3h66qYGbgSDPGKoJJFzkla0uEwoXkekiKLfv8tHea+HeQlU4lbLlSvXYTxUBRkMdR6dx0aj6xFkGJQ8EVwg4+f2TsP2Z8STIGjRV6s8Q2M40uXa7YLcqHJWc5WPvE6ouiVjFUmLBT8N4P1y+ChF/6bTFrKTjQnVZNE9xAHFI4VvhRbluVL0FekqTqrHXuM3VsxJqbxCiTqzS1TAm7Mj2xzwg9RGeQpInyISctzHi64QrCi+HxYiG5DPU3Xvu2bH2SnKVR1Cc0xVc72acyERHehuZVlc6TJ+eAxsmDr4MY=
branches:
  only:
    - main
    - api-snake
before_install:
  - |
    if [ "${TRAVIS_EVENT_TYPE}" == "pull_request" ]; then
      export TAG="pr-${TRAVIS_PULL_REQUEST}"
    else
      export TAG="latest"
    fi
jobs:
  include:
    - stage: "Build libfdo-data"
      script:
        - if [ "${TRAVIS_EVENT_TYPE}" == "pull_request" ]; then echo "LABEL quay.expires-after=3d" >> ./test-container/Dockerfile; fi
        - docker build -t ${FLEET_MANAGEMENT_ORG}/libfdo-data:${TAG} -f ./test-container/Dockerfile .
        - docker login quay.io -u ${FLEETER_BOT} -p ${FLEETER_PASS} >/dev/null 2>&1
        - docker push ${FLEET_MANAGEMENT_ORG}/libfdo-data:${TAG}
    - stage: "Build & Test"
      name: "Build edge-api"
      script:
        - if [ "${TRAVIS_EVENT_TYPE}" == "pull_request" ]; then echo "LABEL quay.expires-after=3d" >> ./Dockerfile; fi
        - sed -i 's|registry.access.redhat.com/ubi8/ubi|quay.io/centos/centos:8|' ./Dockerfile
        - sed -i 's|.*ubi-micro-build.*ubi.repo||' ./Dockerfile
        - sed -i "s|${FLEET_MANAGEMENT_ORG}/libfdo-data|${FLEET_MANAGEMENT_ORG}/libfdo-data:${TAG}|" ./Dockerfile
        - docker build -t ${FLEET_MANAGEMENT_ORG}/edge-api:${TAG} -f ./Dockerfile .
        - docker login quay.io -u ${FLEETER_BOT} -p ${FLEETER_PASS} >/dev/null 2>&1
        - docker push ${FLEET_MANAGEMENT_ORG}/edge-api:${TAG}
    - name: "Static Code Analysis"
      script:
        - docker run --rm -w /edge-api -v $(pwd):/edge-api ${FLEET_MANAGEMENT_ORG}/libfdo-data:${TAG} /bin/sh -c "staticcheck -go 1.15 -f stylish ./..."
    - name: "Validate spec-file"
      language: python
      python: 3.9
      install: pip install openapi-spec-validator
      script: python3 -m openapi_spec_validator ./cmd/spec/openapi.json
    - name: "Coverage Testing"
      script:
        - docker run --rm -v $(pwd):/edge-api ${FLEET_MANAGEMENT_ORG}/libfdo-data:${TAG}
        - bash <(curl -s https://codecov.io/bash)
    - name: "Code Formatting"
      script: "[ $(go fmt ./... | wc -l) -eq 0 ]"
    - name: "Code Linting"
      script:
        - go get -u golang.org/x/lint/golint
        - "[ $(make -s lint | wc -l) -eq 0 ]"
