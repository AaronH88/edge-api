# This playbook is meant to be an all-in-one
- name: Run the ostree update in a single play without external deps
  become: true
  hosts: localhost
  vars:
    ostree_remote_name: "@@ .GoTemplateRemoteName @@"
    ostree_remote_url: "@@ .GoTemplateRemoteURL @@"
    ostree_content_url: "@@ .GoTemplateContentURL @@"
    ostree_gpg_verify: "@@ .OstreeGpgVerify @@"
    ostree_gpg_keypath: "@@ .OstreeGpgKeypath @@"
    ostree_remote_template: |
      [remote "{{ ostree_remote_name }}"]
      url={{ ostree_remote_name }}
      gpg-verify={{ ostree_gpg_verify }}
      gpgkeypath={{ ostree_gpg_keypath }}
      contenturl={{ ostree_content_url }}
    insights_signature_exclude: "/vars/insights_signature,/vars/ostree_remote_name,/vars/ostree_remote_url,/vars/ostree_content_url,/vars/ostree_gpg_verify"
  tasks:
    - name: apply templated ostree remote config
      ansible.builtin.copy:
        content: "{{ ostree_remote_template }}"
        dest: /etc/ostree/remotes.d/rhel-edge.conf
    - name: run rpmostree update
      ansible.builtin.shell: rpm-ostree upgrade --allow-downgrade
      register: rpmostree_upgrade_out
      changed_when: '"No upgrade available" not in rpmostree_upgrade_out.stdout'
      failed_when: 'rpmostree_upgrade_out.rc != 0'
    - name: schedule reboot when rpmostree upgraded
      ansible.builtin.shell: systemd-run --on-active=5 /usr/bin/systemctl reboot
      when: '"Staging deployment...done" in rpmostree_upgrade_out.stdout'
