// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/services/repo.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/redhatinsights/edge-api/pkg/models"
)

// MockRepoServiceInterface is a mock of RepoServiceInterface interface.
type MockRepoServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoServiceInterfaceMockRecorder
}

// MockRepoServiceInterfaceMockRecorder is the mock recorder for MockRepoServiceInterface.
type MockRepoServiceInterfaceMockRecorder struct {
	mock *MockRepoServiceInterface
}

// NewMockRepoServiceInterface creates a new mock instance.
func NewMockRepoServiceInterface(ctrl *gomock.Controller) *MockRepoServiceInterface {
	mock := &MockRepoServiceInterface{ctrl: ctrl}
	mock.recorder = &MockRepoServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoServiceInterface) EXPECT() *MockRepoServiceInterfaceMockRecorder {
	return m.recorder
}

// GetRepoByID mocks base method.
func (m *MockRepoServiceInterface) GetRepoByID(repoID *uint) (*models.Repo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepoByID", repoID)
	ret0, _ := ret[0].(*models.Repo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRepoByID indicates an expected call of GetRepoByID.
func (mr *MockRepoServiceInterfaceMockRecorder) GetRepoByID(repoID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepoByID", reflect.TypeOf((*MockRepoServiceInterface)(nil).GetRepoByID), repoID)
}
